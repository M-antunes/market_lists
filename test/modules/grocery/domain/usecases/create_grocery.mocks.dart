// Mocks generated by Mockito 5.1.0 from annotations
// in market_lists/test/modules/grocery/domain/usecases/create_grocery.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:market_lists/modules/grocery/grocery.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'create_grocery.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGrocery_0 extends _i1.Fake implements _i2.Grocery {}

/// A class which mocks [GroceryRepositoryTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroceryRepositoryTest extends _i1.Mock
    implements _i3.GroceryRepositoryTest {
  MockGroceryRepositoryTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Grocery> create(_i2.Grocery? grocery) =>
      (super.noSuchMethod(Invocation.method(#create, [grocery]),
              returnValue: Future<_i2.Grocery>.value(_FakeGrocery_0()))
          as _i4.Future<_i2.Grocery>);
  @override
  _i4.Future<void> update(_i2.Grocery? grocery) =>
      (super.noSuchMethod(Invocation.method(#update, [grocery]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> delete(_i2.Grocery? grocery) =>
      (super.noSuchMethod(Invocation.method(#delete, [grocery]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
